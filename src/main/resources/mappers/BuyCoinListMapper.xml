<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="BuyCoinListMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="buyCoinListMap" type="study.spring.clip.model.BuyCoinList">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="buy_coin_list_no" column="buy_coin_list_no" />
        <result property="date" column="date" />
        <result property="price" column="price" />
        <result property="user_no" column="user_no" />
        <result property="coin" column="coin" />
    </resultMap>
    
    <!-- 기능 정의 -->
    
    <!-- user_no로 코인구매내역 객체 조회 -->
    <select id="buyList"
		parameterType="study.spring.clip.model.BuyCoinList"
		resultMap="buyCoinListMap">
		SELECT date, price, buy_coin_list_no FROM buy_coin_list WHERE user_no = #{user_no};
	</select>
	
	<!-- 날짜 비교 하기 -->
	<select id="dateCheck"
		parameterType="study.spring.clip.model.BuyCoinList"
		resultMap="buyCoinListMap">
		SELECT * FROM buy_coin_list WHERE buy_coin_list_no = #{buy_coin_list_no} AND <![CDATA[DATE_ADD(date, INTERVAL 1 WEEK) <= now()]]>;
	</select>
	
	<!-- 코인 체크 하기 -->
	<select id="coinCheck"
		parameterType="study.spring.clip.model.BuyCoinList"
		resultType="int">
		SELECT SUM(u.coin - (b.price * 1.1)) FROM user u, buy_coin_list b WHERE u.user_no = #{user_no} AND b.buy_coin_list_no = #{buy_coin_list_no};
	</select>
	
	<!-- 파라미터값으로 받아온 값이 db값과 일치하는지 확인하는 작업 -->
	<select id="checkList"
		parameterType="study.spring.clip.model.BuyCoinList"
		resultMap="buyCoinListMap">
		SELECT * FROM buy_coin_list WHERE user_no = #{user_no} AND buy_coin_list_no = #{buy_coin_list_no};
	</select>

	<!-- 파라미터값으로 받아온 값 비교후 행 삭제(환불) -->
	<delete id="deleteItem"
		parameterType="study.spring.clip.model.BuyCoinList">
		DELETE FROM buy_coin_list WHERE user_no = #{user_no} AND buy_coin_list_no = #{buy_coin_list_no};	
	</delete>
	
	<!-- 코인 환불했을때 코인 차감 -->
	<update id="userCoinDelete"
    	parameterType="study.spring.clip.model.BuyCoinList">
        UPDATE user SET coin = (#{coin} - ((SELECT price FROM buy_coin_list WHERE buy_coin_list_no = #{buy_coin_list_no}) * 1.1))
		WHERE user_no = #{user_no};
    </update>
    
    <!-- 코인 결제했을때 코인 증가 -->
	<update id="userCoinAdd"
    	parameterType="study.spring.clip.model.BuyCoinList">
        UPDATE user SET coin = (#{coin} + (#{price} * 1.1))
		WHERE user_no = #{user_no};
    </update>
	
	<!-- 코인 구매했을때 구매내역 추가 -->
	<insert id="insertItem"
		parameterType="study.spring.clip.model.BuyCoinList"
		useGeneratedKeys="true"
		keyProperty="buy_coin_list_no">
		INSERT INTO buy_coin_list (date, price, user_no) VALUES (now(), #{price}, #{user_no});
	</insert>
	
	<!-- 회원 탈퇴 행 삭제 -->
	<delete id="deleteList" parameterType="study.spring.clip.model.BuyCoinList">
		DELETE FROM buy_coin_list WHERE user_no = #{user_no};
	</delete>
	
</mapper>